stages:
  - test
  - documentation
variables:
  SCHEDULER_PARAMETERS: "-N 1 -n 1 -c 40 -t 00:15:00 -A pc2-mitarbeiter -p all --exclusive"
  JULIA_DEPOT_PATH: "/scratch/pc2-mitarbeiter/bauerc/.julia-ci"
default:
  tags:
    - bauerc-noctua

# julia/1.6:
#   stage: test
#   rules:
#     - changes:
#         - "README.md"
#     - when: on_success
#   script:
#     - /bin/bash -l
#     - module load lang/Julia/1.6.6-linux-x86_64
#     - julia --color=yes --project=. -e 'using Pkg; Pkg.build(verbose=true); Pkg.test(; coverage = false);'

julia/1.8:
  stage: test
  rules:
    - changes:
        - "README.md"
    - when: on_success
  # needs:
  #   job: julia/1.6
  script:
    - /bin/bash -l
    - module load lang/JuliaHPC/1.8.3-foss-2022a-CUDA-11.7.0
    - julia --color=yes --project=. -e 'using Pkg; Pkg.build(verbose=true); Pkg.test(; coverage = true);'
    - julia --color=yes --project=test/coverage -e 'import Pkg; Pkg.instantiate()'
    - julia --color=yes --project=test/coverage test/coverage/coverage.jl

julia/1.9:
  stage: test
  rules:
    - changes:
        - "README.md"
    - when: on_success
  # needs:
  #   job: julia/1.8
  script:
    - /bin/bash -l
    - export PATH=$HOME/.juliaup/bin:$PATH
    # - export PATH=/upb/departments/pc2/users/b/bauerc/.juliaup/bin:$PATH
    - julia +1.9 --color=yes --project=. -e 'using Pkg; Pkg.build(verbose=true); Pkg.test(; coverage = false);'
  allow_failure: true

# Documentation
build-and-deploy:
  stage: documentation
  only:
    - main
    - pushes
    - tags
    - external_pull_requests
  # needs:
  #   job: julia/1.8
  script:
    - /bin/bash -l
    - module load lang/JuliaHPC/1.8.3-foss-2022a-CUDA-11.7.0
    - cd docs
    - julia --color=yes build_docs.jl
  allow_failure: false
